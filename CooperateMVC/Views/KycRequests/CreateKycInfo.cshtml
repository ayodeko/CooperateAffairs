@using Newtonsoft.Json
@model CooperateMVC.Models.KycInfoViewModel

@{
    //ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Update Kyc Information</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateKycInfo">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompanyObjective" class="control-label"></label>
                <input asp-for="CompanyObjective" class="form-control" />
                <span asp-validation-for="CompanyObjective" class="text-danger"></span>
            </div>
            @Html.HiddenFor(model => model.CompanyOfficersList)
            @Html.HiddenFor(model => model.ShareHolders)
            <div class="form-group">
            @if(Model?.CompanyOfficersList != null && Model.CompanyOfficersList.Count > 0){
                @for (int i = 0; i < Model.CompanyOfficersList.Count; i++)
                {
                    <div class="form-group">
                        @{var hol = $"{i + 1}. - {Model.CompanyOfficersList[i].Name}";} 
                        @{var id = i; Console.WriteLine($"IDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD: {id}");}
                        @hol
                        <input type="submit" value="Edit" formaction="@Url.Action("NavigateToEditCompanyOfficer", "KycRequests", new {id = id} )" />
                        <input type="submit" value="Delete" formaction="@Url.Action("NavigateToDeleteCompanyOfficer", "KycRequests", new {id = id})" />
                    </div>
                }
            }
            <input type="submit" value="Add Company Officer" formaction="@Url.Action("NavigateToCreateCompanyOfficer", "KycRequests")" />
            </div>
            
            <div class="form-group">
            @if(Model?.ShareHolders != null && Model.ShareHolders.Count > 0){
                @for (int i = 0; i < Model.ShareHolders.Count; i++)
                {
                    <div class="form-group">
                        @{var hol = $"{i + 1}. - {Model.ShareHolders[i].Name}";}
                        @{var id = i;}
                        @hol
                        <input type="submit" value="Edit" formaction="@Url.Action("NavigateToEditShareHolder", "KycRequests", new {id = id} )" />
                        <input type="submit" value="Delete" formaction="@Url.Action("NavigateToDeleteShareHolder", "KycRequests", new {id = id})" />
                    </div>
                }
            }
            <input type="submit" value="Add Company Officer" formaction="@Url.Action("NavigateToCreateShareHolder", "KycRequests")" />
            </div>
            @Html.HiddenFor(model => model.KycRequestJsonHolder)
            @Html.HiddenFor(model => model.RCNumber)
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <input type="submit" value="Clear" formaction="@Url.Action("ClearTempData", "KycRequests")" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
